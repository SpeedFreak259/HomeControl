// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: homeControl.proto

#ifndef PROTOBUF_homeControl_2eproto__INCLUDED
#define PROTOBUF_homeControl_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace homeControl {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_homeControl_2eproto();
void protobuf_AssignDesc_homeControl_2eproto();
void protobuf_ShutdownFile_homeControl_2eproto();

class DimmerCommand;
class DimmerStatus;
class ElectricalStatus;
class HomeControlCommand;
class HomeControlStatus;
class StatusRequestCommand;
class SwitchCommand;
class SwitchStatus;
class TemperatureStatus;

enum StatusRequestCommand_StatusType {
  StatusRequestCommand_StatusType_NONE = 0,
  StatusRequestCommand_StatusType_FULL = 1,
  StatusRequestCommand_StatusType_StatusRequestCommand_StatusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StatusRequestCommand_StatusType_StatusRequestCommand_StatusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StatusRequestCommand_StatusType_IsValid(int value);
const StatusRequestCommand_StatusType StatusRequestCommand_StatusType_StatusType_MIN = StatusRequestCommand_StatusType_NONE;
const StatusRequestCommand_StatusType StatusRequestCommand_StatusType_StatusType_MAX = StatusRequestCommand_StatusType_FULL;
const int StatusRequestCommand_StatusType_StatusType_ARRAYSIZE = StatusRequestCommand_StatusType_StatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* StatusRequestCommand_StatusType_descriptor();
inline const ::std::string& StatusRequestCommand_StatusType_Name(StatusRequestCommand_StatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    StatusRequestCommand_StatusType_descriptor(), value);
}
inline bool StatusRequestCommand_StatusType_Parse(
    const ::std::string& name, StatusRequestCommand_StatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StatusRequestCommand_StatusType>(
    StatusRequestCommand_StatusType_descriptor(), name, value);
}
// ===================================================================

class HomeControlCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:homeControl.HomeControlCommand) */ {
 public:
  HomeControlCommand();
  virtual ~HomeControlCommand();

  HomeControlCommand(const HomeControlCommand& from);

  inline HomeControlCommand& operator=(const HomeControlCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeControlCommand& default_instance();

  enum CommandCase {
    kDimmerCommand = 1,
    kSwitchCommand = 2,
    kStatusRequestCommand = 3,
    COMMAND_NOT_SET = 0,
  };

  void Swap(HomeControlCommand* other);

  // implements Message ----------------------------------------------

  inline HomeControlCommand* New() const { return New(NULL); }

  HomeControlCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HomeControlCommand& from);
  void MergeFrom(const HomeControlCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HomeControlCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .homeControl.DimmerCommand dimmerCommand = 1;
  bool has_dimmercommand() const;
  void clear_dimmercommand();
  static const int kDimmerCommandFieldNumber = 1;
  const ::homeControl::DimmerCommand& dimmercommand() const;
  ::homeControl::DimmerCommand* mutable_dimmercommand();
  ::homeControl::DimmerCommand* release_dimmercommand();
  void set_allocated_dimmercommand(::homeControl::DimmerCommand* dimmercommand);

  // optional .homeControl.SwitchCommand switchCommand = 2;
  bool has_switchcommand() const;
  void clear_switchcommand();
  static const int kSwitchCommandFieldNumber = 2;
  const ::homeControl::SwitchCommand& switchcommand() const;
  ::homeControl::SwitchCommand* mutable_switchcommand();
  ::homeControl::SwitchCommand* release_switchcommand();
  void set_allocated_switchcommand(::homeControl::SwitchCommand* switchcommand);

  // optional .homeControl.StatusRequestCommand statusRequestCommand = 3;
  bool has_statusrequestcommand() const;
  void clear_statusrequestcommand();
  static const int kStatusRequestCommandFieldNumber = 3;
  const ::homeControl::StatusRequestCommand& statusrequestcommand() const;
  ::homeControl::StatusRequestCommand* mutable_statusrequestcommand();
  ::homeControl::StatusRequestCommand* release_statusrequestcommand();
  void set_allocated_statusrequestcommand(::homeControl::StatusRequestCommand* statusrequestcommand);

  CommandCase command_case() const;
  // @@protoc_insertion_point(class_scope:homeControl.HomeControlCommand)
 private:
  inline void set_has_dimmercommand();
  inline void set_has_switchcommand();
  inline void set_has_statusrequestcommand();

  inline bool has_command() const;
  void clear_command();
  inline void clear_has_command();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union CommandUnion {
    CommandUnion() {}
    ::homeControl::DimmerCommand* dimmercommand_;
    ::homeControl::SwitchCommand* switchcommand_;
    ::homeControl::StatusRequestCommand* statusrequestcommand_;
  } command_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_homeControl_2eproto();
  friend void protobuf_AssignDesc_homeControl_2eproto();
  friend void protobuf_ShutdownFile_homeControl_2eproto();

  void InitAsDefaultInstance();
  static HomeControlCommand* default_instance_;
};
// -------------------------------------------------------------------

class DimmerCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:homeControl.DimmerCommand) */ {
 public:
  DimmerCommand();
  virtual ~DimmerCommand();

  DimmerCommand(const DimmerCommand& from);

  inline DimmerCommand& operator=(const DimmerCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DimmerCommand& default_instance();

  void Swap(DimmerCommand* other);

  // implements Message ----------------------------------------------

  inline DimmerCommand* New() const { return New(NULL); }

  DimmerCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DimmerCommand& from);
  void MergeFrom(const DimmerCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DimmerCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 channel = 1;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // optional int32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:homeControl.DimmerCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 level_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_homeControl_2eproto();
  friend void protobuf_AssignDesc_homeControl_2eproto();
  friend void protobuf_ShutdownFile_homeControl_2eproto();

  void InitAsDefaultInstance();
  static DimmerCommand* default_instance_;
};
// -------------------------------------------------------------------

class SwitchCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:homeControl.SwitchCommand) */ {
 public:
  SwitchCommand();
  virtual ~SwitchCommand();

  SwitchCommand(const SwitchCommand& from);

  inline SwitchCommand& operator=(const SwitchCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchCommand& default_instance();

  void Swap(SwitchCommand* other);

  // implements Message ----------------------------------------------

  inline SwitchCommand* New() const { return New(NULL); }

  SwitchCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SwitchCommand& from);
  void MergeFrom(const SwitchCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SwitchCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 channel = 1;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // optional bool state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  bool state() const;
  void set_state(bool value);

  // @@protoc_insertion_point(class_scope:homeControl.SwitchCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 channel_;
  bool state_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_homeControl_2eproto();
  friend void protobuf_AssignDesc_homeControl_2eproto();
  friend void protobuf_ShutdownFile_homeControl_2eproto();

  void InitAsDefaultInstance();
  static SwitchCommand* default_instance_;
};
// -------------------------------------------------------------------

class StatusRequestCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:homeControl.StatusRequestCommand) */ {
 public:
  StatusRequestCommand();
  virtual ~StatusRequestCommand();

  StatusRequestCommand(const StatusRequestCommand& from);

  inline StatusRequestCommand& operator=(const StatusRequestCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusRequestCommand& default_instance();

  void Swap(StatusRequestCommand* other);

  // implements Message ----------------------------------------------

  inline StatusRequestCommand* New() const { return New(NULL); }

  StatusRequestCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusRequestCommand& from);
  void MergeFrom(const StatusRequestCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusRequestCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef StatusRequestCommand_StatusType StatusType;
  static const StatusType NONE =
    StatusRequestCommand_StatusType_NONE;
  static const StatusType FULL =
    StatusRequestCommand_StatusType_FULL;
  static inline bool StatusType_IsValid(int value) {
    return StatusRequestCommand_StatusType_IsValid(value);
  }
  static const StatusType StatusType_MIN =
    StatusRequestCommand_StatusType_StatusType_MIN;
  static const StatusType StatusType_MAX =
    StatusRequestCommand_StatusType_StatusType_MAX;
  static const int StatusType_ARRAYSIZE =
    StatusRequestCommand_StatusType_StatusType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  StatusType_descriptor() {
    return StatusRequestCommand_StatusType_descriptor();
  }
  static inline const ::std::string& StatusType_Name(StatusType value) {
    return StatusRequestCommand_StatusType_Name(value);
  }
  static inline bool StatusType_Parse(const ::std::string& name,
      StatusType* value) {
    return StatusRequestCommand_StatusType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .homeControl.StatusRequestCommand.StatusType statusType = 1;
  void clear_statustype();
  static const int kStatusTypeFieldNumber = 1;
  ::homeControl::StatusRequestCommand_StatusType statustype() const;
  void set_statustype(::homeControl::StatusRequestCommand_StatusType value);

  // @@protoc_insertion_point(class_scope:homeControl.StatusRequestCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int statustype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_homeControl_2eproto();
  friend void protobuf_AssignDesc_homeControl_2eproto();
  friend void protobuf_ShutdownFile_homeControl_2eproto();

  void InitAsDefaultInstance();
  static StatusRequestCommand* default_instance_;
};
// -------------------------------------------------------------------

class HomeControlStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:homeControl.HomeControlStatus) */ {
 public:
  HomeControlStatus();
  virtual ~HomeControlStatus();

  HomeControlStatus(const HomeControlStatus& from);

  inline HomeControlStatus& operator=(const HomeControlStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeControlStatus& default_instance();

  void Swap(HomeControlStatus* other);

  // implements Message ----------------------------------------------

  inline HomeControlStatus* New() const { return New(NULL); }

  HomeControlStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HomeControlStatus& from);
  void MergeFrom(const HomeControlStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HomeControlStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .homeControl.ElectricalStatus electrical = 1;
  bool has_electrical() const;
  void clear_electrical();
  static const int kElectricalFieldNumber = 1;
  const ::homeControl::ElectricalStatus& electrical() const;
  ::homeControl::ElectricalStatus* mutable_electrical();
  ::homeControl::ElectricalStatus* release_electrical();
  void set_allocated_electrical(::homeControl::ElectricalStatus* electrical);

  // repeated .homeControl.SwitchStatus outputs = 2;
  int outputs_size() const;
  void clear_outputs();
  static const int kOutputsFieldNumber = 2;
  const ::homeControl::SwitchStatus& outputs(int index) const;
  ::homeControl::SwitchStatus* mutable_outputs(int index);
  ::homeControl::SwitchStatus* add_outputs();
  ::google::protobuf::RepeatedPtrField< ::homeControl::SwitchStatus >*
      mutable_outputs();
  const ::google::protobuf::RepeatedPtrField< ::homeControl::SwitchStatus >&
      outputs() const;

  // repeated .homeControl.SwitchStatus inputs = 3;
  int inputs_size() const;
  void clear_inputs();
  static const int kInputsFieldNumber = 3;
  const ::homeControl::SwitchStatus& inputs(int index) const;
  ::homeControl::SwitchStatus* mutable_inputs(int index);
  ::homeControl::SwitchStatus* add_inputs();
  ::google::protobuf::RepeatedPtrField< ::homeControl::SwitchStatus >*
      mutable_inputs();
  const ::google::protobuf::RepeatedPtrField< ::homeControl::SwitchStatus >&
      inputs() const;

  // repeated .homeControl.DimmerStatus dimmers = 4;
  int dimmers_size() const;
  void clear_dimmers();
  static const int kDimmersFieldNumber = 4;
  const ::homeControl::DimmerStatus& dimmers(int index) const;
  ::homeControl::DimmerStatus* mutable_dimmers(int index);
  ::homeControl::DimmerStatus* add_dimmers();
  ::google::protobuf::RepeatedPtrField< ::homeControl::DimmerStatus >*
      mutable_dimmers();
  const ::google::protobuf::RepeatedPtrField< ::homeControl::DimmerStatus >&
      dimmers() const;

  // repeated .homeControl.TemperatureStatus temperatures = 5;
  int temperatures_size() const;
  void clear_temperatures();
  static const int kTemperaturesFieldNumber = 5;
  const ::homeControl::TemperatureStatus& temperatures(int index) const;
  ::homeControl::TemperatureStatus* mutable_temperatures(int index);
  ::homeControl::TemperatureStatus* add_temperatures();
  ::google::protobuf::RepeatedPtrField< ::homeControl::TemperatureStatus >*
      mutable_temperatures();
  const ::google::protobuf::RepeatedPtrField< ::homeControl::TemperatureStatus >&
      temperatures() const;

  // optional uint64 uptime = 6;
  void clear_uptime();
  static const int kUptimeFieldNumber = 6;
  ::google::protobuf::uint64 uptime() const;
  void set_uptime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:homeControl.HomeControlStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::homeControl::ElectricalStatus* electrical_;
  ::google::protobuf::RepeatedPtrField< ::homeControl::SwitchStatus > outputs_;
  ::google::protobuf::RepeatedPtrField< ::homeControl::SwitchStatus > inputs_;
  ::google::protobuf::RepeatedPtrField< ::homeControl::DimmerStatus > dimmers_;
  ::google::protobuf::RepeatedPtrField< ::homeControl::TemperatureStatus > temperatures_;
  ::google::protobuf::uint64 uptime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_homeControl_2eproto();
  friend void protobuf_AssignDesc_homeControl_2eproto();
  friend void protobuf_ShutdownFile_homeControl_2eproto();

  void InitAsDefaultInstance();
  static HomeControlStatus* default_instance_;
};
// -------------------------------------------------------------------

class ElectricalStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:homeControl.ElectricalStatus) */ {
 public:
  ElectricalStatus();
  virtual ~ElectricalStatus();

  ElectricalStatus(const ElectricalStatus& from);

  inline ElectricalStatus& operator=(const ElectricalStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ElectricalStatus& default_instance();

  void Swap(ElectricalStatus* other);

  // implements Message ----------------------------------------------

  inline ElectricalStatus* New() const { return New(NULL); }

  ElectricalStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ElectricalStatus& from);
  void MergeFrom(const ElectricalStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ElectricalStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double volts = 1;
  void clear_volts();
  static const int kVoltsFieldNumber = 1;
  double volts() const;
  void set_volts(double value);

  // optional double amps = 2;
  void clear_amps();
  static const int kAmpsFieldNumber = 2;
  double amps() const;
  void set_amps(double value);

  // @@protoc_insertion_point(class_scope:homeControl.ElectricalStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double volts_;
  double amps_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_homeControl_2eproto();
  friend void protobuf_AssignDesc_homeControl_2eproto();
  friend void protobuf_ShutdownFile_homeControl_2eproto();

  void InitAsDefaultInstance();
  static ElectricalStatus* default_instance_;
};
// -------------------------------------------------------------------

class SwitchStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:homeControl.SwitchStatus) */ {
 public:
  SwitchStatus();
  virtual ~SwitchStatus();

  SwitchStatus(const SwitchStatus& from);

  inline SwitchStatus& operator=(const SwitchStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchStatus& default_instance();

  void Swap(SwitchStatus* other);

  // implements Message ----------------------------------------------

  inline SwitchStatus* New() const { return New(NULL); }

  SwitchStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SwitchStatus& from);
  void MergeFrom(const SwitchStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SwitchStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 channel = 1;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // optional bool state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  bool state() const;
  void set_state(bool value);

  // @@protoc_insertion_point(class_scope:homeControl.SwitchStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 channel_;
  bool state_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_homeControl_2eproto();
  friend void protobuf_AssignDesc_homeControl_2eproto();
  friend void protobuf_ShutdownFile_homeControl_2eproto();

  void InitAsDefaultInstance();
  static SwitchStatus* default_instance_;
};
// -------------------------------------------------------------------

class DimmerStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:homeControl.DimmerStatus) */ {
 public:
  DimmerStatus();
  virtual ~DimmerStatus();

  DimmerStatus(const DimmerStatus& from);

  inline DimmerStatus& operator=(const DimmerStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DimmerStatus& default_instance();

  void Swap(DimmerStatus* other);

  // implements Message ----------------------------------------------

  inline DimmerStatus* New() const { return New(NULL); }

  DimmerStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DimmerStatus& from);
  void MergeFrom(const DimmerStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DimmerStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 channel = 1;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // optional int32 demandLevel = 2;
  void clear_demandlevel();
  static const int kDemandLevelFieldNumber = 2;
  ::google::protobuf::int32 demandlevel() const;
  void set_demandlevel(::google::protobuf::int32 value);

  // optional int32 actualLevel = 3;
  void clear_actuallevel();
  static const int kActualLevelFieldNumber = 3;
  ::google::protobuf::int32 actuallevel() const;
  void set_actuallevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:homeControl.DimmerStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 demandlevel_;
  ::google::protobuf::int32 actuallevel_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_homeControl_2eproto();
  friend void protobuf_AssignDesc_homeControl_2eproto();
  friend void protobuf_ShutdownFile_homeControl_2eproto();

  void InitAsDefaultInstance();
  static DimmerStatus* default_instance_;
};
// -------------------------------------------------------------------

class TemperatureStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:homeControl.TemperatureStatus) */ {
 public:
  TemperatureStatus();
  virtual ~TemperatureStatus();

  TemperatureStatus(const TemperatureStatus& from);

  inline TemperatureStatus& operator=(const TemperatureStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TemperatureStatus& default_instance();

  void Swap(TemperatureStatus* other);

  // implements Message ----------------------------------------------

  inline TemperatureStatus* New() const { return New(NULL); }

  TemperatureStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TemperatureStatus& from);
  void MergeFrom(const TemperatureStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TemperatureStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 channel = 1;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // optional int32 TemperatureC00 = 2;
  void clear_temperaturec00();
  static const int kTemperatureC00FieldNumber = 2;
  ::google::protobuf::int32 temperaturec00() const;
  void set_temperaturec00(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:homeControl.TemperatureStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 temperaturec00_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_homeControl_2eproto();
  friend void protobuf_AssignDesc_homeControl_2eproto();
  friend void protobuf_ShutdownFile_homeControl_2eproto();

  void InitAsDefaultInstance();
  static TemperatureStatus* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeControlCommand

// optional .homeControl.DimmerCommand dimmerCommand = 1;
inline bool HomeControlCommand::has_dimmercommand() const {
  return command_case() == kDimmerCommand;
}
inline void HomeControlCommand::set_has_dimmercommand() {
  _oneof_case_[0] = kDimmerCommand;
}
inline void HomeControlCommand::clear_dimmercommand() {
  if (has_dimmercommand()) {
    delete command_.dimmercommand_;
    clear_has_command();
  }
}
inline  const ::homeControl::DimmerCommand& HomeControlCommand::dimmercommand() const {
  // @@protoc_insertion_point(field_get:homeControl.HomeControlCommand.dimmerCommand)
  return has_dimmercommand()
      ? *command_.dimmercommand_
      : ::homeControl::DimmerCommand::default_instance();
}
inline ::homeControl::DimmerCommand* HomeControlCommand::mutable_dimmercommand() {
  if (!has_dimmercommand()) {
    clear_command();
    set_has_dimmercommand();
    command_.dimmercommand_ = new ::homeControl::DimmerCommand;
  }
  // @@protoc_insertion_point(field_mutable:homeControl.HomeControlCommand.dimmerCommand)
  return command_.dimmercommand_;
}
inline ::homeControl::DimmerCommand* HomeControlCommand::release_dimmercommand() {
  // @@protoc_insertion_point(field_release:homeControl.HomeControlCommand.dimmerCommand)
  if (has_dimmercommand()) {
    clear_has_command();
    ::homeControl::DimmerCommand* temp = command_.dimmercommand_;
    command_.dimmercommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HomeControlCommand::set_allocated_dimmercommand(::homeControl::DimmerCommand* dimmercommand) {
  clear_command();
  if (dimmercommand) {
    set_has_dimmercommand();
    command_.dimmercommand_ = dimmercommand;
  }
  // @@protoc_insertion_point(field_set_allocated:homeControl.HomeControlCommand.dimmerCommand)
}

// optional .homeControl.SwitchCommand switchCommand = 2;
inline bool HomeControlCommand::has_switchcommand() const {
  return command_case() == kSwitchCommand;
}
inline void HomeControlCommand::set_has_switchcommand() {
  _oneof_case_[0] = kSwitchCommand;
}
inline void HomeControlCommand::clear_switchcommand() {
  if (has_switchcommand()) {
    delete command_.switchcommand_;
    clear_has_command();
  }
}
inline  const ::homeControl::SwitchCommand& HomeControlCommand::switchcommand() const {
  // @@protoc_insertion_point(field_get:homeControl.HomeControlCommand.switchCommand)
  return has_switchcommand()
      ? *command_.switchcommand_
      : ::homeControl::SwitchCommand::default_instance();
}
inline ::homeControl::SwitchCommand* HomeControlCommand::mutable_switchcommand() {
  if (!has_switchcommand()) {
    clear_command();
    set_has_switchcommand();
    command_.switchcommand_ = new ::homeControl::SwitchCommand;
  }
  // @@protoc_insertion_point(field_mutable:homeControl.HomeControlCommand.switchCommand)
  return command_.switchcommand_;
}
inline ::homeControl::SwitchCommand* HomeControlCommand::release_switchcommand() {
  // @@protoc_insertion_point(field_release:homeControl.HomeControlCommand.switchCommand)
  if (has_switchcommand()) {
    clear_has_command();
    ::homeControl::SwitchCommand* temp = command_.switchcommand_;
    command_.switchcommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HomeControlCommand::set_allocated_switchcommand(::homeControl::SwitchCommand* switchcommand) {
  clear_command();
  if (switchcommand) {
    set_has_switchcommand();
    command_.switchcommand_ = switchcommand;
  }
  // @@protoc_insertion_point(field_set_allocated:homeControl.HomeControlCommand.switchCommand)
}

// optional .homeControl.StatusRequestCommand statusRequestCommand = 3;
inline bool HomeControlCommand::has_statusrequestcommand() const {
  return command_case() == kStatusRequestCommand;
}
inline void HomeControlCommand::set_has_statusrequestcommand() {
  _oneof_case_[0] = kStatusRequestCommand;
}
inline void HomeControlCommand::clear_statusrequestcommand() {
  if (has_statusrequestcommand()) {
    delete command_.statusrequestcommand_;
    clear_has_command();
  }
}
inline  const ::homeControl::StatusRequestCommand& HomeControlCommand::statusrequestcommand() const {
  // @@protoc_insertion_point(field_get:homeControl.HomeControlCommand.statusRequestCommand)
  return has_statusrequestcommand()
      ? *command_.statusrequestcommand_
      : ::homeControl::StatusRequestCommand::default_instance();
}
inline ::homeControl::StatusRequestCommand* HomeControlCommand::mutable_statusrequestcommand() {
  if (!has_statusrequestcommand()) {
    clear_command();
    set_has_statusrequestcommand();
    command_.statusrequestcommand_ = new ::homeControl::StatusRequestCommand;
  }
  // @@protoc_insertion_point(field_mutable:homeControl.HomeControlCommand.statusRequestCommand)
  return command_.statusrequestcommand_;
}
inline ::homeControl::StatusRequestCommand* HomeControlCommand::release_statusrequestcommand() {
  // @@protoc_insertion_point(field_release:homeControl.HomeControlCommand.statusRequestCommand)
  if (has_statusrequestcommand()) {
    clear_has_command();
    ::homeControl::StatusRequestCommand* temp = command_.statusrequestcommand_;
    command_.statusrequestcommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HomeControlCommand::set_allocated_statusrequestcommand(::homeControl::StatusRequestCommand* statusrequestcommand) {
  clear_command();
  if (statusrequestcommand) {
    set_has_statusrequestcommand();
    command_.statusrequestcommand_ = statusrequestcommand;
  }
  // @@protoc_insertion_point(field_set_allocated:homeControl.HomeControlCommand.statusRequestCommand)
}

inline bool HomeControlCommand::has_command() const {
  return command_case() != COMMAND_NOT_SET;
}
inline void HomeControlCommand::clear_has_command() {
  _oneof_case_[0] = COMMAND_NOT_SET;
}
inline HomeControlCommand::CommandCase HomeControlCommand::command_case() const {
  return HomeControlCommand::CommandCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DimmerCommand

// optional int32 channel = 1;
inline void DimmerCommand::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 DimmerCommand::channel() const {
  // @@protoc_insertion_point(field_get:homeControl.DimmerCommand.channel)
  return channel_;
}
inline void DimmerCommand::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:homeControl.DimmerCommand.channel)
}

// optional int32 level = 2;
inline void DimmerCommand::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 DimmerCommand::level() const {
  // @@protoc_insertion_point(field_get:homeControl.DimmerCommand.level)
  return level_;
}
inline void DimmerCommand::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:homeControl.DimmerCommand.level)
}

// -------------------------------------------------------------------

// SwitchCommand

// optional int32 channel = 1;
inline void SwitchCommand::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 SwitchCommand::channel() const {
  // @@protoc_insertion_point(field_get:homeControl.SwitchCommand.channel)
  return channel_;
}
inline void SwitchCommand::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:homeControl.SwitchCommand.channel)
}

// optional bool state = 2;
inline void SwitchCommand::clear_state() {
  state_ = false;
}
inline bool SwitchCommand::state() const {
  // @@protoc_insertion_point(field_get:homeControl.SwitchCommand.state)
  return state_;
}
inline void SwitchCommand::set_state(bool value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:homeControl.SwitchCommand.state)
}

// -------------------------------------------------------------------

// StatusRequestCommand

// optional .homeControl.StatusRequestCommand.StatusType statusType = 1;
inline void StatusRequestCommand::clear_statustype() {
  statustype_ = 0;
}
inline ::homeControl::StatusRequestCommand_StatusType StatusRequestCommand::statustype() const {
  // @@protoc_insertion_point(field_get:homeControl.StatusRequestCommand.statusType)
  return static_cast< ::homeControl::StatusRequestCommand_StatusType >(statustype_);
}
inline void StatusRequestCommand::set_statustype(::homeControl::StatusRequestCommand_StatusType value) {
  
  statustype_ = value;
  // @@protoc_insertion_point(field_set:homeControl.StatusRequestCommand.statusType)
}

// -------------------------------------------------------------------

// HomeControlStatus

// optional .homeControl.ElectricalStatus electrical = 1;
inline bool HomeControlStatus::has_electrical() const {
  return !_is_default_instance_ && electrical_ != NULL;
}
inline void HomeControlStatus::clear_electrical() {
  if (GetArenaNoVirtual() == NULL && electrical_ != NULL) delete electrical_;
  electrical_ = NULL;
}
inline const ::homeControl::ElectricalStatus& HomeControlStatus::electrical() const {
  // @@protoc_insertion_point(field_get:homeControl.HomeControlStatus.electrical)
  return electrical_ != NULL ? *electrical_ : *default_instance_->electrical_;
}
inline ::homeControl::ElectricalStatus* HomeControlStatus::mutable_electrical() {
  
  if (electrical_ == NULL) {
    electrical_ = new ::homeControl::ElectricalStatus;
  }
  // @@protoc_insertion_point(field_mutable:homeControl.HomeControlStatus.electrical)
  return electrical_;
}
inline ::homeControl::ElectricalStatus* HomeControlStatus::release_electrical() {
  // @@protoc_insertion_point(field_release:homeControl.HomeControlStatus.electrical)
  
  ::homeControl::ElectricalStatus* temp = electrical_;
  electrical_ = NULL;
  return temp;
}
inline void HomeControlStatus::set_allocated_electrical(::homeControl::ElectricalStatus* electrical) {
  delete electrical_;
  electrical_ = electrical;
  if (electrical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:homeControl.HomeControlStatus.electrical)
}

// repeated .homeControl.SwitchStatus outputs = 2;
inline int HomeControlStatus::outputs_size() const {
  return outputs_.size();
}
inline void HomeControlStatus::clear_outputs() {
  outputs_.Clear();
}
inline const ::homeControl::SwitchStatus& HomeControlStatus::outputs(int index) const {
  // @@protoc_insertion_point(field_get:homeControl.HomeControlStatus.outputs)
  return outputs_.Get(index);
}
inline ::homeControl::SwitchStatus* HomeControlStatus::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:homeControl.HomeControlStatus.outputs)
  return outputs_.Mutable(index);
}
inline ::homeControl::SwitchStatus* HomeControlStatus::add_outputs() {
  // @@protoc_insertion_point(field_add:homeControl.HomeControlStatus.outputs)
  return outputs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::homeControl::SwitchStatus >*
HomeControlStatus::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:homeControl.HomeControlStatus.outputs)
  return &outputs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::homeControl::SwitchStatus >&
HomeControlStatus::outputs() const {
  // @@protoc_insertion_point(field_list:homeControl.HomeControlStatus.outputs)
  return outputs_;
}

// repeated .homeControl.SwitchStatus inputs = 3;
inline int HomeControlStatus::inputs_size() const {
  return inputs_.size();
}
inline void HomeControlStatus::clear_inputs() {
  inputs_.Clear();
}
inline const ::homeControl::SwitchStatus& HomeControlStatus::inputs(int index) const {
  // @@protoc_insertion_point(field_get:homeControl.HomeControlStatus.inputs)
  return inputs_.Get(index);
}
inline ::homeControl::SwitchStatus* HomeControlStatus::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:homeControl.HomeControlStatus.inputs)
  return inputs_.Mutable(index);
}
inline ::homeControl::SwitchStatus* HomeControlStatus::add_inputs() {
  // @@protoc_insertion_point(field_add:homeControl.HomeControlStatus.inputs)
  return inputs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::homeControl::SwitchStatus >*
HomeControlStatus::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:homeControl.HomeControlStatus.inputs)
  return &inputs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::homeControl::SwitchStatus >&
HomeControlStatus::inputs() const {
  // @@protoc_insertion_point(field_list:homeControl.HomeControlStatus.inputs)
  return inputs_;
}

// repeated .homeControl.DimmerStatus dimmers = 4;
inline int HomeControlStatus::dimmers_size() const {
  return dimmers_.size();
}
inline void HomeControlStatus::clear_dimmers() {
  dimmers_.Clear();
}
inline const ::homeControl::DimmerStatus& HomeControlStatus::dimmers(int index) const {
  // @@protoc_insertion_point(field_get:homeControl.HomeControlStatus.dimmers)
  return dimmers_.Get(index);
}
inline ::homeControl::DimmerStatus* HomeControlStatus::mutable_dimmers(int index) {
  // @@protoc_insertion_point(field_mutable:homeControl.HomeControlStatus.dimmers)
  return dimmers_.Mutable(index);
}
inline ::homeControl::DimmerStatus* HomeControlStatus::add_dimmers() {
  // @@protoc_insertion_point(field_add:homeControl.HomeControlStatus.dimmers)
  return dimmers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::homeControl::DimmerStatus >*
HomeControlStatus::mutable_dimmers() {
  // @@protoc_insertion_point(field_mutable_list:homeControl.HomeControlStatus.dimmers)
  return &dimmers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::homeControl::DimmerStatus >&
HomeControlStatus::dimmers() const {
  // @@protoc_insertion_point(field_list:homeControl.HomeControlStatus.dimmers)
  return dimmers_;
}

// repeated .homeControl.TemperatureStatus temperatures = 5;
inline int HomeControlStatus::temperatures_size() const {
  return temperatures_.size();
}
inline void HomeControlStatus::clear_temperatures() {
  temperatures_.Clear();
}
inline const ::homeControl::TemperatureStatus& HomeControlStatus::temperatures(int index) const {
  // @@protoc_insertion_point(field_get:homeControl.HomeControlStatus.temperatures)
  return temperatures_.Get(index);
}
inline ::homeControl::TemperatureStatus* HomeControlStatus::mutable_temperatures(int index) {
  // @@protoc_insertion_point(field_mutable:homeControl.HomeControlStatus.temperatures)
  return temperatures_.Mutable(index);
}
inline ::homeControl::TemperatureStatus* HomeControlStatus::add_temperatures() {
  // @@protoc_insertion_point(field_add:homeControl.HomeControlStatus.temperatures)
  return temperatures_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::homeControl::TemperatureStatus >*
HomeControlStatus::mutable_temperatures() {
  // @@protoc_insertion_point(field_mutable_list:homeControl.HomeControlStatus.temperatures)
  return &temperatures_;
}
inline const ::google::protobuf::RepeatedPtrField< ::homeControl::TemperatureStatus >&
HomeControlStatus::temperatures() const {
  // @@protoc_insertion_point(field_list:homeControl.HomeControlStatus.temperatures)
  return temperatures_;
}

// optional uint64 uptime = 6;
inline void HomeControlStatus::clear_uptime() {
  uptime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HomeControlStatus::uptime() const {
  // @@protoc_insertion_point(field_get:homeControl.HomeControlStatus.uptime)
  return uptime_;
}
inline void HomeControlStatus::set_uptime(::google::protobuf::uint64 value) {
  
  uptime_ = value;
  // @@protoc_insertion_point(field_set:homeControl.HomeControlStatus.uptime)
}

// -------------------------------------------------------------------

// ElectricalStatus

// optional double volts = 1;
inline void ElectricalStatus::clear_volts() {
  volts_ = 0;
}
inline double ElectricalStatus::volts() const {
  // @@protoc_insertion_point(field_get:homeControl.ElectricalStatus.volts)
  return volts_;
}
inline void ElectricalStatus::set_volts(double value) {
  
  volts_ = value;
  // @@protoc_insertion_point(field_set:homeControl.ElectricalStatus.volts)
}

// optional double amps = 2;
inline void ElectricalStatus::clear_amps() {
  amps_ = 0;
}
inline double ElectricalStatus::amps() const {
  // @@protoc_insertion_point(field_get:homeControl.ElectricalStatus.amps)
  return amps_;
}
inline void ElectricalStatus::set_amps(double value) {
  
  amps_ = value;
  // @@protoc_insertion_point(field_set:homeControl.ElectricalStatus.amps)
}

// -------------------------------------------------------------------

// SwitchStatus

// optional int32 channel = 1;
inline void SwitchStatus::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 SwitchStatus::channel() const {
  // @@protoc_insertion_point(field_get:homeControl.SwitchStatus.channel)
  return channel_;
}
inline void SwitchStatus::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:homeControl.SwitchStatus.channel)
}

// optional bool state = 2;
inline void SwitchStatus::clear_state() {
  state_ = false;
}
inline bool SwitchStatus::state() const {
  // @@protoc_insertion_point(field_get:homeControl.SwitchStatus.state)
  return state_;
}
inline void SwitchStatus::set_state(bool value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:homeControl.SwitchStatus.state)
}

// -------------------------------------------------------------------

// DimmerStatus

// optional int32 channel = 1;
inline void DimmerStatus::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 DimmerStatus::channel() const {
  // @@protoc_insertion_point(field_get:homeControl.DimmerStatus.channel)
  return channel_;
}
inline void DimmerStatus::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:homeControl.DimmerStatus.channel)
}

// optional int32 demandLevel = 2;
inline void DimmerStatus::clear_demandlevel() {
  demandlevel_ = 0;
}
inline ::google::protobuf::int32 DimmerStatus::demandlevel() const {
  // @@protoc_insertion_point(field_get:homeControl.DimmerStatus.demandLevel)
  return demandlevel_;
}
inline void DimmerStatus::set_demandlevel(::google::protobuf::int32 value) {
  
  demandlevel_ = value;
  // @@protoc_insertion_point(field_set:homeControl.DimmerStatus.demandLevel)
}

// optional int32 actualLevel = 3;
inline void DimmerStatus::clear_actuallevel() {
  actuallevel_ = 0;
}
inline ::google::protobuf::int32 DimmerStatus::actuallevel() const {
  // @@protoc_insertion_point(field_get:homeControl.DimmerStatus.actualLevel)
  return actuallevel_;
}
inline void DimmerStatus::set_actuallevel(::google::protobuf::int32 value) {
  
  actuallevel_ = value;
  // @@protoc_insertion_point(field_set:homeControl.DimmerStatus.actualLevel)
}

// -------------------------------------------------------------------

// TemperatureStatus

// optional int32 channel = 1;
inline void TemperatureStatus::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 TemperatureStatus::channel() const {
  // @@protoc_insertion_point(field_get:homeControl.TemperatureStatus.channel)
  return channel_;
}
inline void TemperatureStatus::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:homeControl.TemperatureStatus.channel)
}

// optional int32 TemperatureC00 = 2;
inline void TemperatureStatus::clear_temperaturec00() {
  temperaturec00_ = 0;
}
inline ::google::protobuf::int32 TemperatureStatus::temperaturec00() const {
  // @@protoc_insertion_point(field_get:homeControl.TemperatureStatus.TemperatureC00)
  return temperaturec00_;
}
inline void TemperatureStatus::set_temperaturec00(::google::protobuf::int32 value) {
  
  temperaturec00_ = value;
  // @@protoc_insertion_point(field_set:homeControl.TemperatureStatus.TemperatureC00)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace homeControl

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::homeControl::StatusRequestCommand_StatusType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::homeControl::StatusRequestCommand_StatusType>() {
  return ::homeControl::StatusRequestCommand_StatusType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_homeControl_2eproto__INCLUDED
